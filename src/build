#! /usr/local/bin/rc -e

# test/bench files are in the tests folder, and suffixed
# with _bench.c or _test.c; keep this in sync with the Makefile.
tests = `{ls tests/*_test.c | sed -e s/_test.c// -e s/tests\///}
benchs = `{ls tests/*_bench.c | sed -e s/_bench.c// -e s/tests\///}

target = `{gcc -v |[2] grep Target}

CC = gcc

# detect host arch
if (echo $target | grep -q x86_64) ARCH = amd64
if (echo $target | grep -q armv7) ARCH = arm

# detect host OS
if (echo $target | grep -q linux) POLLER = epoll
if (echo $target | grep -q 'bsd\|darwin') POLLER = kqueue

CFLAGS = '-O3 -g -Wall -Werror'

# detect musl-gcc
if (test `{ whatis musl-gcc}) {
    CC = musl-gcc
    CFLAGS = '-O3 -g -Wall -Werror -static -flto'
    INCLUDE_DIR = /usr/lib/musl/include
    LIB_DIR = /usr/lib/musl/lib
} else {
    INCLUDE_DIR = /usr/include
    LIB_DIR = /usr/lib/
}

mkdir -p bin

# compilation of test and benchmark binaries
# is done in parallel.
fn build_tests { make -j bin/^$tests.test }
fn build_benchs { make -j bin/$benchs.bench }

fn test { build_tests; for (test in `{ls ./bin/*.test}) ./$test; echo 'PASS' }
fn bench { build_benchs; for (bench in `{ls ./bin/*.bench}) ./$bench }

fn install { make install }
fn uninstall { make uninstall }

$*
